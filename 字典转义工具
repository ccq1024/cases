package com.help.web.controller.tools;

import com.help.annotation.Dictionary;
import com.help.common.util.StringUtil;

import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

/**
 *  字典转义工具类
 * @author GT
 */
public class TransferMeaningUtil {

    /**
     *  通过map字典翻译
     * @param params   要翻译的字段 格式"name,value.."
     * @param dictionaryMap map类型的字典
     * @param objectMap 元数据
     * @param type  value  取字典的值  key 取字典的键
     * @return
     */
    public  static  Map transferByMap(String params , Map<String ,String> dictionaryMap ,Map objectMap ,String type){
        String [] fields = params.trim().split(",");
        if(fields.length>0){
            for (String field :fields){
                if("value".equals(type)){
                    String value = objectMap.get(field)+"";
                    if(StringUtil.isNotEmpty(value)){
                        objectMap.put(field,dictionaryMap.get(value));
                    }
                }else if("key".equals(type)){
                     String value = objectMap.get(field)+"";
                     if(StringUtil.isNotEmpty(value)){
                         Iterator<Map.Entry<String ,String>> dictionaries= dictionaryMap.entrySet().iterator();
                         while (dictionaries.hasNext()){
                             Map.Entry<String ,String> entry=dictionaries.next();
                             if(value.equals(entry.getValue())){
                                 objectMap.put(field,entry.getKey());
                                 break;
                             }
                         }
                     }
                }
            }
        }
        return  objectMap;
    }

    /**
     * 通过注解翻译 (Map)
     * @param params 要翻译的字段 格式"name,value.."
     * @param clazz 实体类名
     * @param objectMap 元数据
     * @param dicType  字典类别
     * @return
     */
    public  static  Map transferByAnnotation(String params ,Class clazz, Map objectMap , String dicType){
        String [] parameters = params.trim().split(",");
        if(parameters.length>0){
            for (String param :parameters){
                String value = objectMap.get(param).toString();
                Field[] fields = clazz.getDeclaredFields();
                for (Field field : fields) {
                    if (field.isAnnotationPresent(Dictionary.class)) {
                        Dictionary dictionary = field.getAnnotation(Dictionary.class);
                        //判断是否已经获取过该code的字典数据 避免重复获取
                        if (dicType.equals(dictionary.type())&& value.equals(dictionary.value())) {
                            objectMap.put(param,dictionary.name());
                            break;
                        }
                    }
                }
            }
        }
        return  objectMap;
    }

    /**
     * 通过注解翻译 (List)
     * @param params 要翻译的字段 格式"name,value.."
     * @param clazz 实体类名
     * @param objectList 元数据
     * @param dicType  字典类别
     * @return
     */
    public  static List transferListByAnnotation(String params , Class clazz,List<Map<String,java.lang.Object>> objectList , String dicType){
        List <Map> list = new ArrayList<>();
        for(Map map:objectList){
            Map newMap=transferByAnnotation(params,clazz,map,dicType);
            list.add(newMap);
        }
        return  list;
    }


}
